<project name="datafu-hourglass" basedir="." default="build"
         xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <property name="ivy.jar.version" value="2.2.0" />
  <property name="ivy.jar.dir" value="${basedir}/ivy" />
  <property name="lib.dir" value="${basedir}/lib" />
  <property name="mvnrepo" value="http://repo2.maven.org/maven2"/>
  <property name="ivy.jar.repo.url" value="${mvnrepo}/org/apache/ivy/ivy/${ivy.jar.version}/ivy-${ivy.jar.version}.jar"/>
  <property name="ivy.jar" value="${ivy.jar.dir}/ivy-${ivy.jar.version}.jar" />
  <property name="dist.dir" value="${basedir}/dist" />
  <property name="classes.dir" value="${dist.dir}/classes" />
  <property name="test.classes.dir" value="${dist.dir}/testclasses" />
  <property name="java.dir" value="${basedir}/src/java" />
  <property name="test.java.dir" value="${basedir}/test/java" />
  <property name="lib.dir" value="${basedir}/lib" />
  <property name="common.lib.dir" value="${lib.dir}/common" />
  <property name="test.lib.dir" value="${lib.dir}/test" />
  <property name="hadoop.lib.dir" value="${lib.dir}/hadoop" />
  <property name="jar.dir" value="${dist.dir}/jar" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="report.dir" value="${basedir}/report" />
  <property name="docs.dir" value="${basedir}/docs" />
  <property name="javadoc.dir" value="${docs.dir}/javadoc" />
  <condition property="jar.name" value="datafu-hourglass-${version}" else="datafu-hourglass">
    <isset property="version" />
  </condition>
  <condition property="sources.jar.name" value="datafu-hourglass-${version}-sources" else="datafu-hourglass-sources">
    <isset property="version" />
  </condition>
  <condition property="javadoc.jar.name" value="datafu-hourglass-${version}-javadoc" else="datafu-hourglass-javadoc">
    <isset property="version" />
  </condition>
  <property name="jar.file" value="${jar.name}.jar" />
  <property name="jar.path" value="${build.dir}/${jar.file}" />
  <property name="sources.jar.path" value="${build.dir}/${sources.jar.name}.jar" />
  <property name="javadoc.jar.path" value="${build.dir}/${javadoc.jar.name}.jar" />
  <property name="test.jar.name" value="datafu-hourglass-test.jar" />
  <property name="test.jar.path" value="${build.dir}/${test.jar.name}" />
  <property name="classes.pattern" value="**/*.class" />

  <target name="ivy-jar-download" description="Download ivy jar">
    <mkdir dir="${ivy.jar.dir}"/>
    <get src="${ivy.jar.repo.url}" dest="${ivy.jar}" usetimestamp="true"/>
  </target>

  <target name="ivy-taskdef" depends="ivy-jar-download" description="install ivy">
    <path id="ivy.lib.path">
      <pathelement location="${ivy.jar}"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>
  
  <target name="ivy-resolve" depends="ivy-taskdef" description="retreive dependencies with ivy">
    <delete dir="${lib.dir}" />
    <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[type]-[revision].[ext]"/>
    <ivy:report todir="ivy/report" />
  </target>

  <path id="main-classpath">
    <fileset dir="${common.lib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${hadoop.lib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${test.lib.dir}">
      <include name="*.jar" />
    </fileset>
    <pathelement path="${classes.dir}" />
  </path>

  <path id="test-classpath">
    <path refid="main-classpath" />
    <pathelement path="${test.classes.dir}" />
  </path>

  <path id="test-local-classpath">
    <path refid="test-classpath" />
    <!-- need conf dir for local hadoop instance -->
    <pathelement location="${conf.dir}" />
  </path>
    
  <target name="clean-logs">
    <delete dir="${basedir}/test-logs" />
    <delete dir="${basedir}/test-output" />
    <delete dir="${basedir}/test-report" />
    <delete dir="${basedir}/report" />
  </target>

  <target name="clean-build">
    <delete dir="${build.dir}" />
  </target>

  <target name="clean" depends="clean-build,clean-logs">
    <delete dir="${dist.dir}" />
    <delete dir="${lib.dir}" />
    <delete dir="${docs.dir}" />
    <delete dir="${ivy.jar.dir}" />
  </target>

  <target name="compile" depends="ivy-resolve">
    <delete dir="${classes.dir}"/>
    <mkdir dir="${classes.dir}" />
    <javac fork="true" destdir="${classes.dir}" target="1.6" debug="true"
           deprecation="true" failonerror="true">
      <src path="${java.dir}"/>
      <classpath refid="main-classpath"/>
    </javac>
  </target>

  <target name="compile-tests" depends="ivy-resolve">
    <delete dir="${test.classes.dir}"/>
    <mkdir dir="${test.classes.dir}" />
    <javac fork="true" destdir="${test.classes.dir}" target="1.6" debug="true"
           deprecation="true" failonerror="true">
      <src path="${test.java.dir}"/>
      <classpath refid="main-classpath"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${build.dir}" />
    <jar jarfile="${build.dir}/${jar.file}" filesetmanifest="merge">
      <fileset dir="${classes.dir}"/>
    </jar>
  </target>

  <target name="testjar" depends="compile-tests">
    <mkdir dir="${build.dir}" />
    <jar jarfile="${build.dir}/${test.jar.name}" filesetmanifest="skip">
      <fileset dir="${test.classes.dir}"/>
      <manifest>
        <attribute name="Main-Class" value="datafu.hourglass.demo.Main"/>
      </manifest>
    </jar>
  </target>

  <target name="build" depends="clean,jar,javadoc-jar,sources-jar">
  </target>

  <target name="test-local" depends="testjar" description="Runs the tests against local hadoop instance">
    <fail unless="conf.dir">You must define 'conf.dir' with -Dconf.dir=&lt;path-to-hadoop-conf-directory&gt;</fail>
    <taskdef resource="testngtasks" classpath="lib/test/testng-jar-6.0.1.jar"/>
    <testng classpathref="main-classpath"
            groups="pcl"
            outputDir="${report.dir}" verbose="2" haltonfailure="true" haltonskipped="true">
      <jvmarg value="-Xmx1G" />
      <sysproperty key="testlocal" value="true" />
      <sysproperty key="testjar" value="${test.jar.path}" />
      <classpath refid="test-local-classpath"/>
      <classfileset dir="${classes.dir}" includes="${classes.pattern}" />
      <classfileset dir="${test.classes.dir}" includes="${classes.pattern}" />
    </testng>
  </target>

  <target name="test" depends="clean-logs,compile,compile-tests" description="Runs the tests using single process cluster">
    <taskdef resource="testngtasks" classpath="lib/test/testng-jar-6.0.1.jar"/>
    <testng classpathref="main-classpath"
            groups="pcl"
            outputDir="${report.dir}" verbose="2" haltonfailure="true" haltonskipped="true">
      <jvmarg value="-Xmx1G" />
      <classpath refid="test-classpath"/>
      <classfileset dir="${classes.dir}" includes="${classes.pattern}" />
      <classfileset dir="${test.classes.dir}" includes="${classes.pattern}" />
    </testng>
  </target>

  <target name="sources-jar" description="Build source jar file">
    <jar destfile="${sources.jar.path}">
      <fileset dir="${java.dir}">
        <include name="**/*.java" />
      </fileset>
    </jar>
  </target>

  <macrodef name="replace-dir">
    <attribute name="dir" />
    <sequential>
      <delete dir="@{dir}" />
      <mkdir dir="@{dir}" />
    </sequential>
  </macrodef>
  
  <macrodef name="make-javadocs">
    <attribute name="dir" />
    <attribute name="packagenames" />
    <attribute name="javadir" />
    <sequential>
      <replace-dir dir="@{dir}" />
      <javadoc destdir="@{dir}" windowtitle="DataFu Hourglass" source="1.5" author="true" version="true" use="true" packagenames="@{packagenames}" Overview="overview.html">
        <doctitle>DataFu Hourglass</doctitle>
        <bottom>Matthew Hayes</bottom>
        <classpath refid="main-classpath" />
        <fileset dir="@{javadir}">
        </fileset>
      </javadoc>
    </sequential>
  </macrodef>
  
  <target name="javadoc-jar" description="Create complete Javadoc documentation">
    <delete dir="${javadoc.dir}" />
    <make-javadocs dir="${javadoc.dir}" packagenames="*" javadir="${java.dir}"/>
    
    <!-- Make javadoc JAR -->    
    <jar destfile="${javadoc.jar.path}">
      <fileset dir="${javadoc.dir}">
        <include name="**/*.*" />
      </fileset>
    </jar>
  </target>
</project>
